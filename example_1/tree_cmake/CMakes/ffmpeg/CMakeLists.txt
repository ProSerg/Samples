cmake_minimum_required(VERSION 2.8)
project( ffmpeg )
message (STATUS "CMAKE ${PROJECT_NAME} " )

set(TARGET libmpeg )


set(MAJOR 2)
set(MINOR 9.3)
set(SUFFIX .so)

set(PROJECT_SOURCE_DIR "${CMAKE_CURRENT_SOURCE_DIR}/src")
set(PROJECT_LIB_DIR "${PROJECT_SOURCE_DIR}/")
set(PROJECT_LIB_INCLUDE_DIR "${PROJECT_SOURCE_DIR}/")



set(LD ${LIBRARY_OUTPUT_PATH}/${PROJECT_NAME} )

set(TARGET_YASM yasm )
set(LIB_YASM ${PROJECT_SOURCE_DIR}/${TARGET_YASM}/libyasm.a)

set(TARGET_FRIBIDI fribidi )
set(LIB_FRIBIDI ${PROJECT_SOURCE_DIR}/${TARGET_FRIBIDI}/lib/.libs/libfribidi.so )

set(TARGET_FFMPEG ffmpeg )
set(LIB_FFMPEG ${LIBRARY_OUTPUT_PATH}/${PROJECT_NAME}/lib/libavcodec.so ) 



add_custom_target(${PROJECT_NAME} ALL DEPENDS  
	#${LIB_YASM}
	#${LIB_FRIBIDI}
	${LIB_FFMPEG}
	)

ADD_CUSTOM_COMMAND(
	OUTPUT ${LIB_YASM}
	COMMAND ./configure --prefix="${LIBRARY_OUTPUT_PATH}/${PROJECT_NAME}" --bindir="${LIBRARY_OUTPUT_PATH}/${PROJECT_NAME}/bin" && make && make install
	WORKING_DIRECTORY ${PROJECT_SOURCE_DIR}/${TARGET_YASM}
	COMMENT "YASM-LIB"
)


ADD_CUSTOM_COMMAND(
	OUTPUT ${LIB_FRIBIDI}
	COMMAND  ./bootstrap && ./configure --prefix="${LIBRARY_OUTPUT_PATH}/${PROJECT_NAME}" && make && make install
	WORKING_DIRECTORY ${PROJECT_SOURCE_DIR}/${TARGET_FRIBIDI}
	COMMENT "FRIBIDI-LIB"
)

ADD_CUSTOM_COMMAND(
	OUTPUT  ${LIB_FFMPEG}
	COMMAND ./make.sh 
	WORKING_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}
	COMMENT "FFMPEG-LIB"
)

ADD_CUSTOM_COMMAND(
	  TARGET ${PROJECT_NAME}
	  POST_BUILD
          COMMAND ${CMAKE_COMMAND} -E make_directory ${LICENSE_OUTPUT_PATH}/${PROJECT_NAME}
          COMMAND ${CMAKE_COMMAND} -E make_directory ${LIBRARY_OUTPUT_PATH}/${PROJECT_NAME} 
          COMMAND ${CMAKE_COMMAND} -E make_directory ${LIBRARY_OUTPUT_PATH}/${PROJECT_NAME}/bin 
          COMMAND ${CMAKE_COMMAND} -E make_directory ${LIBRARY_OUTPUT_PATH}/${PROJECT_NAME}/lib 
          COMMAND ${CMAKE_COMMAND} -E make_directory ${LIBRARY_OUTPUT_PATH}/${PROJECT_NAME}/include 
          COMMENT "${PROJECT_NAME} BUILD"
)


set(LICENSES_ffmpeg
	${PROJECT_SOURCE_DIR}/ffmpeg/COPYING.GPLv2
	${PROJECT_SOURCE_DIR}/ffmpeg/COPYING.GPLv3
	${PROJECT_SOURCE_DIR}/ffmpeg/COPYING.LGPLv2.1
	${PROJECT_SOURCE_DIR}/ffmpeg/COPYING.LGPLv3
	${PROJECT_SOURCE_DIR}/ffmpeg/LICENSE.md
)

set(LICENSES_fribid 
	${PROJECT_SOURCE_DIR}/fribidi/COPYING
)

set(LICENSES_libass
	${PROJECT_SOURCE_DIR}/libass/COPYING
)

set(LICENSES_theora
	${PROJECT_SOURCE_DIR}/theora/COPYING
)

set(LICENSES_vorbis
	${PROJECT_SOURCE_DIR}/vorbis/COPYING
)

set(LICENSES_x264
	${PROJECT_SOURCE_DIR}/x264/COPYING
)

set(LICENSES_x265
	${PROJECT_SOURCE_DIR}/x265/COPYING
)

set(LICENSES_yasm
	${PROJECT_SOURCE_DIR}/yasm/COPYING
)

INSTALL(
	FILES ${LICENSES_ffmpeg} DESTINATION  ${LICENSE_OUTPUT_PATH}/ffmpeg
)

INSTALL(
	FILES ${LICENSES_fribid} DESTINATION  ${LICENSE_OUTPUT_PATH}/fribid
)

INSTALL(
	FILES ${LICENSES_libass} DESTINATION  ${LICENSE_OUTPUT_PATH}/libass
)

INSTALL(
	FILES ${LICENSES_theora} DESTINATION  ${LICENSE_OUTPUT_PATH}/theora
)

INSTALL(
	FILES ${LICENSES_vorbis} DESTINATION  ${LICENSE_OUTPUT_PATH}/vorbis
)

INSTALL(
	FILES ${LICENSES_x264} DESTINATION  ${LICENSE_OUTPUT_PATH}/x264
)

INSTALL(
	FILES ${LICENSES_x265} DESTINATION  ${LICENSE_OUTPUT_PATH}/x265
)

INSTALL(
	FILES ${LICENSES_yasm} DESTINATION  ${LICENSE_OUTPUT_PATH}/yasm
)
