cmake_minimum_required(VERSION 2.8)
project( openssl )
message (STATUS "CMAKE ${PROJECT_NAME} " )

set(TARGET libssl )
set(MAJOR 1)
set(MINOR 0.2)
set(SUFFIX .so)

set(PROJECT_SOURCE_DIR "${CMAKE_CURRENT_SOURCE_DIR}/src")
set(PROJECT_LIB_DIR "${PROJECT_SOURCE_DIR}/")
set(PROJECT_LIB_INCLUDE_DIR "${PROJECT_SOURCE_DIR}/")



add_custom_target(${PROJECT_NAME} ALL DEPENDS ${LIBRARY_OUTPUT_PATH}/${PROJECT_NAME}/lib/${TARGET}${SUFFIX} )

ADD_CUSTOM_COMMAND(
	OUTPUT ${LIBRARY_OUTPUT_PATH}/${PROJECT_NAME}/lib/${TARGET}${SUFFIX}
	COMMAND ./config --prefix=${LIBRARY_OUTPUT_PATH}/${PROJECT_NAME} shared && make -j4 && make install
	WORKING_DIRECTORY ${PROJECT_SOURCE_DIR}
)

ADD_CUSTOM_COMMAND(
	  TARGET ${PROJECT_NAME}
	  POST_BUILD
          COMMAND ${CMAKE_COMMAND} -E make_directory ${LICENSE_OUTPUT_PATH}/${PROJECT_NAME}
          COMMAND ${CMAKE_COMMAND} -E make_directory ${LIBRARY_OUTPUT_PATH}/${PROJECT_NAME} 
          COMMAND ${CMAKE_COMMAND} -E make_directory ${LIBRARY_OUTPUT_PATH}/${PROJECT_NAME}/bin 
          COMMAND ${CMAKE_COMMAND} -E make_directory ${LIBRARY_OUTPUT_PATH}/${PROJECT_NAME}/lib 
          COMMAND ${CMAKE_COMMAND} -E make_directory ${LIBRARY_OUTPUT_PATH}/${PROJECT_NAME}/include 
          COMMENT "POST BUILD"
)


file(GLOB_RECURSE HEADERS "${PROJECT_LIB_INCLUDE_DIR}/*.h" )


set(LICENSES
	${PROJECT_SOURCE_DIR}/LICENSE
)

INSTALL(
        CODE
        "EXECUTE_PROCESS (
        COMMAND make install
        WORKING_DIRECTORY ${PROJECT_SOURCE_DIR}
        )
        "
)

