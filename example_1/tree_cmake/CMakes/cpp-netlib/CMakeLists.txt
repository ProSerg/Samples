cmake_minimum_required(VERSION 2.8)
project( cpp-netlib )
message (STATUS "CMAKE ${PROJECT_NAME} " )

set(TARGET libcppnetlib-uri )
set(MAJOR 0)
set(MINOR 12)
set(SUFFIX .a)

set(PROJECT_SOURCE_DIR "${CMAKE_CURRENT_SOURCE_DIR}/src")
set(PROJECT_LIB_DIR "${PROJECT_SOURCE_DIR}/build/libs/network/src")
set(PROJECT_LIB_INCLUDE_DIR "${PROJECT_SOURCE_DIR}/")


add_custom_target(${PROJECT_NAME} ALL DEPENDS ${LIBRARY_OUTPUT_PATH}/${PROJECT_NAME}/lib/${TARGET}${SUFFIX} )

set(CMAKE_MODULE_PATH ${LIBRARY_OUTPUT_PATH}/boost)

ADD_CUSTOM_COMMAND(
	OUTPUT ${LIBRARY_OUTPUT_PATH}/${PROJECT_NAME}/lib/${TARGET}${SUFFIX}
	COMMAND mkdir -p ./build
	COMMAND cd ./build && cmake -DCMAKE_INSTALL_PREFIX=${LIBRARY_OUTPUT_PATH}/${PROJECT_NAME}  -DCMAKE_BUILD_TYPE=Release -DCMAKE_C_COMPILER=gcc -DCMAKE_CXX_COMPILER=g++  -DBOOST_ROOT:PATHNAME=${LIBRARY_OUTPUT_PATH}/boost -DBOOST_LIBRARY_DIRS:FILEPATH=${LIBRARY_OUTPUT_PATH}/boost/lib -DOPENSSL_ROOT_DIR=${LIBRARY_OUTPUT_PATH}/openssl -DOPENSSL_LIBRARIES=${LIBRARY_OUTPUT_PATH}/openssl/bin -DOPENSSL_INCLUDE_DIR=${LIBRARY_OUTPUT_PATH}/openssl/include .. && make -j4 && make install
	WORKING_DIRECTORY ${PROJECT_SOURCE_DIR}
)

ADD_CUSTOM_COMMAND(
	  TARGET ${PROJECT_NAME}
	  POST_BUILD
          COMMAND ${CMAKE_COMMAND} -E make_directory ${LICENSE_OUTPUT_PATH}/${PROJECT_NAME}
          COMMAND ${CMAKE_COMMAND} -E make_directory ${LIBRARY_OUTPUT_PATH}/${PROJECT_NAME} 
          COMMAND ${CMAKE_COMMAND} -E make_directory ${LIBRARY_OUTPUT_PATH}/${PROJECT_NAME}/bin 
          COMMAND ${CMAKE_COMMAND} -E make_directory ${LIBRARY_OUTPUT_PATH}/${PROJECT_NAME}/lib 
          COMMAND ${CMAKE_COMMAND} -E make_directory ${LIBRARY_OUTPUT_PATH}/${PROJECT_NAME}/include 
          COMMENT "POST BUILD"
)

set(LICENSES
	${PROJECT_SOURCE_DIR}/LICENSE_1_0.txt
)

INSTALL (
        FILES ${LICENSES} DESTINATION ${LICENSE_OUTPUT_PATH}/${PROJECT_NAME}    
)

