cmake_minimum_required(VERSION 2.8)
project( cpp-netlib )
message (STATUS "CMAKE ${PROJECT_NAME} " )

set(TARGET cpp-netlib )
set(MAJOR 0)
set(MINOR 12)
set(SUFFIX .so)

set(PROJECT_SOURCE_DIR "${CMAKE_CURRENT_SOURCE_DIR}/src")
set(PROJECT_LIB_DIR "${PROJECT_SOURCE_DIR}/")
set(PROJECT_LIB_INCLUDE_DIR "${PROJECT_SOURCE_DIR}/")

add_custom_target(${PROJECT_NAME} ALL DEPENDS ${PROJECT_LIB_DIR}/${TARGET}${SUFFIX} )

set(CMAKE_MODULE_PATH ${LIBRARY_OUTPUT_PATH}/boost)

#-DBOOST_NO_BOOST_CMAKE=TRUE -DBOOST_ROOT=${LIBRARY_OUTPUT_PATH}/boost/ -DBOOST_LIBRARY_DIRS=${LIBRARY_OUTPUT_PATH}/boost/bin/
#-DOPENSSL_ROOT_DIR=${LIBRARY_OUTPUT_PATH}/openssl -DOPENSSL_LIBRARIES=${LIBRARY_OUTPUT_PATH}/openssl/bin -DOPENSSL_INCLUDE_DIR=${LIBRARY_OUTPUT_PATH}/openssl/include 
#-DCMAKE_CXX_FLAGS="-std=c++11 ${CMAKE_CXX_FLAGS}" 
#-DBOOST_NO_BOOST_CMAKE=TRUE -DBOOST_NO_SYSTEM_PATHS=TRUE
ADD_CUSTOM_COMMAND(
	OUTPUT ${PROJECT_LIB_DIR}/${TARGET}${SUFFIX}
	COMMAND mkdir -p ./build
#	COMMAND cd ./build && cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_C_COMPILER=cc -DCMAKE_CXX_COMPILER=cc -DBOOST_ROOT:PATHNAME=${LIBRARY_OUTPUT_PATH}/boost -DBOOST_LIBRARY_DIRS:FILEPATH=${LIBRARY_OUTPUT_PATH}/boost/lib -DOPENSSL_ROOT_DIR=${LIBRARY_OUTPUT_PATH}/openssl -DOPENSSL_LIBRARIES=${LIBRARY_OUTPUT_PATH}/openssl/bin -DOPENSSL_INCLUDE_DIR=${LIBRARY_OUTPUT_PATH}/openssl/include .. && make
	WORKING_DIRECTORY ${PROJECT_SOURCE_DIR}
)

#ADD_CUSTOM_COMMAND(
#	  TARGET ${PROJECT_NAME}
#	  POST_BUILD
#         COMMAND ${CMAKE_COMMAND} -E make_directory ${LICENSE_OUTPUT_PATH}/${PROJECT_NAME}
#          COMMAND ${CMAKE_COMMAND} -E make_directory ${LIBRARY_OUTPUT_PATH}/${PROJECT_NAME} 
#          COMMAND ${CMAKE_COMMAND} -E make_directory ${LIBRARY_OUTPUT_PATH}/${PROJECT_NAME}/bin 
#          COMMAND ${CMAKE_COMMAND} -E make_directory ${LIBRARY_OUTPUT_PATH}/${PROJECT_NAME}/lib 
#          COMMAND ${CMAKE_COMMAND} -E make_directory ${LIBRARY_OUTPUT_PATH}/${PROJECT_NAME}/include 
#          COMMENT "POST BUILD"
#)


file(GLOB HEADERS "${PROJECT_LIB_INCLUDE_DIR}/*.h" )


set(LIBS 
	${PROJECT_LIB_DIR}/${TARGET}${SUFFIX}
	${PROJECT_LIB_DIR}/${TARGET}${SUFFIX}.${MAJOR}
	${PROJECT_LIB_DIR}/${TARGET}${SUFFIX}.${MAJOR}.${MINOR}
)

set(LICENSES
	${PROJECT_SOURCE_DIR}/LICENSE_1_0.txt
)
 
