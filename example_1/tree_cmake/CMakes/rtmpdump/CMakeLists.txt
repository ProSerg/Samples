cmake_minimum_required(VERSION 2.8)
project( rtmp )
message (STATUS "CMAKE ${PROJECT_NAME} " )

set(TARGET librtmp )
set(MAJOR 1)
set(MINOR 0)
set(SUFFIX .a)

set(FFMPEG ffmpeg)

set(PROJECT_SOURCE_DIR "${CMAKE_CURRENT_SOURCE_DIR}/src")
set(PROJECT_LIB_DIR "${PROJECT_SOURCE_DIR}/librtmp")
set(PROJECT_LIB_INCLUDE_DIR "${PROJECT_SOURCE_DIR}/")


add_custom_target(${PROJECT_NAME} ALL DEPENDS ${PROJECT_LIB_DIR}/${TARGET}${SUFFIX} )


ADD_CUSTOM_COMMAND(
	OUTPUT ${PROJECT_LIB_DIR}/${TARGET}${SUFFIX}
	COMMAND cd ./librtmp && make SYS=posix XCFLAGS="-I${LIBRARY_OUTPUT_PATH}/openssl/include"  XLDFLAGS="-L${LIBRARY_OUTPUT_PATH}/openssl/lib" 
	WORKING_DIRECTORY ${PROJECT_SOURCE_DIR}
)

ADD_CUSTOM_COMMAND(
	  TARGET ${PROJECT_NAME}
	  POST_BUILD
          COMMAND ${CMAKE_COMMAND} -E make_directory ${LICENSE_OUTPUT_PATH}/${PROJECT_NAME}
          COMMAND ${CMAKE_COMMAND} -E make_directory ${LIBRARY_OUTPUT_PATH}/${FFMPEG} 
          COMMAND ${CMAKE_COMMAND} -E make_directory ${LIBRARY_OUTPUT_PATH}/${FFMPEG}/bin 
          COMMAND ${CMAKE_COMMAND} -E make_directory ${LIBRARY_OUTPUT_PATH}/${FFMPEG}/lib 
          COMMAND ${CMAKE_COMMAND} -E make_directory ${LIBRARY_OUTPUT_PATH}/${FFMPEG}/include 
          COMMENT "POST BUILD"
)


set(
	LICENSE ${PROJECT_SOURCE_DIR}/librtmp/COPYING 
)

set(
	LIBS
	${PROJECT_SOURCE_DIR}/librtmp/librtmp.so
	${PROJECT_SOURCE_DIR}/librtmp/librtmp.so.1
	${PROJECT_SOURCE_DIR}/librtmp/librtmp.a
)
 

INSTALL (
	FILES ${LICENSE} DESTINATION ${LICENSE_OUTPUT_PATH}/${PROJECT_NAME}
)

INSTALL (
	FILES ${LIBS} DESTINATION ${LIBRARY_OUTPUT_PATH}/${FFMPEG}/lib
)


