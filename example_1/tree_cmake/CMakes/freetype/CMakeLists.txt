cmake_minimum_required(VERSION 2.8)
project( freetype )
message (STATUS "CMAKE ${PROJECT_NAME} " )

set(TARGET libfreetype )
set(MAJOR 2)
set(MINOR 6.3)
set(SUFFIX .a)

set(PROJECT_SOURCE_DIR "${CMAKE_CURRENT_SOURCE_DIR}/src")
set(PROJECT_LIB_DIR "${PROJECT_SOURCE_DIR}/objs/.libs")
set(PROJECT_LIB_INCLUDE_DIR "${PROJECT_SOURCE_DIR}/")

add_custom_target(${PROJECT_NAME} ALL DEPENDS ${PROJECT_LIB_DIR}/${TARGET}${SUFFIX} )



ADD_CUSTOM_COMMAND(
	OUTPUT ${PROJECT_LIB_DIR}/${TARGET}${SUFFIX}
#	COMMAND export CFLAGS="$CFLAGS -fPIC" && export CXXFLAGS="$CXXFLAGS -fPIC"
	COMMAND export CXXFLAGS="$CXXFLAGS -fPIC"  && ./autogen.sh && ./configure --prefix=${LIBRARY_OUTPUT_PATH}/${PROJECT_NAME} --enable-static --enable-shared  && make -j2 
	WORKING_DIRECTORY ${PROJECT_SOURCE_DIR}
)

ADD_CUSTOM_COMMAND(
	  TARGET ${PROJECT_NAME}
	  POST_BUILD
          COMMAND ${CMAKE_COMMAND} -E make_directory ${LICENSE_OUTPUT_PATH}/${PROJECT_NAME}
          COMMAND ${CMAKE_COMMAND} -E make_directory ${LIBRARY_OUTPUT_PATH}/${PROJECT_NAME} 
          COMMAND ${CMAKE_COMMAND} -E make_directory ${LIBRARY_OUTPUT_PATH}/${PROJECT_NAME}/bin 
          COMMAND ${CMAKE_COMMAND} -E make_directory ${LIBRARY_OUTPUT_PATH}/${PROJECT_NAME}/lib 
          COMMAND ${CMAKE_COMMAND} -E make_directory ${LIBRARY_OUTPUT_PATH}/${PROJECT_NAME}/include 
          COMMENT "POST BUILD"
)


file(GLOB HEADERS "${PROJECT_LIB_INCLUDE_DIR}/*.h" )


set(LIBS 
	${PROJECT_LIB_DIR}/${TARGET}${SUFFIX}
	${PROJECT_LIB_DIR}/${TARGET}${SUFFIX}.${MAJOR}
	${PROJECT_LIB_DIR}/${TARGET}${SUFFIX}.${MAJOR}.${MINOR}
)

set(LICENSES
	${PROJECT_SOURCE_DIR}/docs/LICENSE.TXT
)

INSTALL(
        CODE
        "EXECUTE_PROCESS (
        COMMAND make install
        WORKING_DIRECTORY ${PROJECT_SOURCE_DIR}
        )
        "
)

INSTALL(
        CODE
        "EXECUTE_PROCESS (
        COMMAND rm -rf ./share
        WORKING_DIRECTORY ${LIBRARY_OUTPUT_PATH}/${PROJECT_NAME}
        )
        "
)

INSTALL (
	FILES ${LICENSES} DESTINATION ${LICENSE_OUTPUT_PATH}/${PROJECT_NAME}	
)

