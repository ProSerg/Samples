cmake_minimum_required(VERSION 2.8)
project( x264 )
message (STATUS "CMAKE ${PROJECT_NAME} " )

set(TARGET libx264 )
set(MAJOR 1)
set(MINOR 0)
set(SUFFIX .a)

set(FFMPEG ffmpeg)

set(PROJECT_SOURCE_DIR "${CMAKE_CURRENT_SOURCE_DIR}/src")
set(PROJECT_LIB_DIR "${PROJECT_SOURCE_DIR}/")
set(PROJECT_LIB_INCLUDE_DIR "${PROJECT_SOURCE_DIR}/")

SET(ENV{PATH} "${LIBRARY_OUTPUT_PATH}/${FFMPEG}/bin:$ENV{PATH}")
SET(ENV{LD_LIBRARY_PATH} "${LIBRARY_OUTPUT_PATH}/${FFMPEG}/lib:$ENV{LD_LIBRARY_PATH}")
SET(ENV{PKG_CONFIG_PATH} "${LIBRARY_OUTPUT_PATH}/${FFMPEG}/lib/pkgconfig:$ENV{PKG_CONFIG_PATH}")

set(CMAKE_MSVCIDE_RUN_PATH ${LibFoo_RUNTIME_LIBRARY_DIRS})

add_custom_target(${PROJECT_NAME} ALL DEPENDS ${PROJECT_LIB_DIR}/${TARGET}${SUFFIX} )

ADD_CUSTOM_COMMAND(
	OUTPUT ${PROJECT_LIB_DIR}/${TARGET}${SUFFIX}
#	COMMAND set "PATH=${LIBRARY_OUTPUT_PATH}/${FFMPEG}/bin:%PATH%"
#	COMMAND set "LD_LIBRARY_PATH=${LIBRARY_OUTPUT_PATH}/${FFMPEG}/lib:%LD_LIBRARY_PATH%"
#	COMMAND set "PKG_CONFIG_PATH=${LIBRARY_OUTPUT_PATH}/${FFMPEG}/lib/pkgconfig:%PKG_CONFIG_PATH%"
#	COMMAND yasm --version
	COMMAND cd .. && ./build.sh
#	COMMAND ./configure --prefix="${LIBRARY_OUTPUT_PATH}/${FFMPEG}" --libdir="${LIBRARY_OUTPUT_PATH}/${FFMPEG}/lib/" --enable-static --enable-shared && make -j4 
	WORKING_DIRECTORY ${PROJECT_SOURCE_DIR}
)

ADD_CUSTOM_COMMAND(
	  TARGET ${PROJECT_NAME}
	  POST_BUILD
          COMMAND ${CMAKE_COMMAND} -E make_directory ${LICENSE_OUTPUT_PATH}/${PROJECT_NAME}
          COMMAND ${CMAKE_COMMAND} -E make_directory ${LIBRARY_OUTPUT_PATH}/${FFMPEG} 
          COMMAND ${CMAKE_COMMAND} -E make_directory ${LIBRARY_OUTPUT_PATH}/${FFMPEG}/bin 
          COMMAND ${CMAKE_COMMAND} -E make_directory ${LIBRARY_OUTPUT_PATH}/${FFMPEG}/lib 
          COMMAND ${CMAKE_COMMAND} -E make_directory ${LIBRARY_OUTPUT_PATH}/${FFMPEG}/include 
          COMMENT "POST BUILD"
)


set(
	LICENSE ${PROJECT_SOURCE_DIR}/COPYING 
)
INSTALL(
        CODE
        "EXECUTE_PROCESS (
        COMMAND make install
        WORKING_DIRECTORY ${PROJECT_SOURCE_DIR}
        )
        "
)
 

INSTALL (
	FILES ${LICENSE} DESTINATION ${LICENSE_OUTPUT_PATH}/${PROJECT_NAME}
)


